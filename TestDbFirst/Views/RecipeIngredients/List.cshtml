@model IEnumerable<TestDbFirst.RecipeIngredient>

@{
    ViewBag.Title = "Recept alapanyagok listája";
}

<h2>Recept alapanyagok listája</h2>

<p>
    <button type="button" class="btn btn-success" onclick="location.href='@Url.Action("Create", "RecipeIngredients", new {id = Url.RequestContext.RouteData.Values["id"].ToString()})'">
        Összetevő hozzáadása
    </button>
</p>

@{
    var totalAmmount = Model.Sum(a => a.Ammount);
    var missingAmmount = 1000 - totalAmmount;
    int currentProgress;
    if (missingAmmount == 0)
    {
        currentProgress = 100;
    }
    else
    {
        if (totalAmmount == 0)
        {
            currentProgress = 100;
        }
        else
        {
            currentProgress = (int)((totalAmmount/1000) * 100);
            if (currentProgress < 50)
            {
                currentProgress = 50;
            }
        }
    }

    var progressBarLabel = totalAmmount == 1000 ? "A recept összetevőinek összege 1000 kg" : String.Format("A recept nincs kész, mivel a receptből hiányzik {0} kg összetevő", missingAmmount);
    var rowClass = totalAmmount == 1000 ? "success" : "danger active";
    var currentProgressWidth = string.Format("{0}%", currentProgress);
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Recipe.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Ingredient.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Ammount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Remark)
        </th>
        <th>Műveletek</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Recipe.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Ingredient.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Ammount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Remark)
            </td>
            <td>
                @Html.ActionLink("Szerkesztés", "Edit", new {id = item.Id}) |
                @Html.ActionLink("Törlés", "Delete", new {id = item.Id})
            </td>
        </tr>
    }
    <tr class=@rowClass>
        @*<th>
                Recept összetevők összesen:
            </th>
            <th>
            </th>
            <th>
                @totalAmmount
            </th>
            <th>
            </th>
            <th>
            </th>*@

        <th colspan="5">
            <div class="progress">
                <div class="progress-bar progress-bar-@rowClass progress-bar-striped " role="progressbar" aria-valuenow=@totalAmmount.ToString() aria-valuemin="0" aria-valuemax="1000" style="width: @currentProgressWidth " >
                    @progressBarLabel 
                </div>
            </div>
        </th>
    
    </tr>

</table>


